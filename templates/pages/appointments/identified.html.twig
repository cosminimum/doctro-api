{% extends 'states/dashboard.html.twig' %}

{% block body %}
    <style>
        .channel-stats-bg {
            background-image: url('{{ asset('theme/media/images/2600x1600/bg-3.png') }}');
        }
        .dark .channel-stats-bg {
            background-image: url('{{ asset('theme/media/images/2600x1600/bg-3-dark.png') }}');
        }
    </style>

    <div class="mb-5 lg:mb-10">
        <div class="container-fixed flex items-center justify-between flex-wrap gap-5">
            <div class="flex flex-col justify-center gap-2">
                <h1 class="font-medium text-lg text-gray-900">Programările mele</h1>
                <div class="flex items-center gap-2 text-sm font-normal text-gray-700">
                    Primul pas către consultul de care aveți nevoie – rezolvați-vă programarea rapid și simplu.
                </div>
            </div>
            <div class="flex items-center gap-1">
                <a class="btn btn-primary btn-lg" href="{{ path('app_appointment_new') }}">
                    Programează
                </a>
            </div>
        </div>
    </div>

    <main class="grow" id="content" role="content">
        <div class="container-fixed" id="content_container">
            <div class="flex flex-col items-stretch gap-5 lg:gap-7.5">
                <div class="flex flex-wrap items-center gap-5 justify-between">
                    <div class="flex items-center flex-wrap gap-5">
                        <div class="flex items-center gap-2.5">
                            <select name="filter" id="filterSelect" class="select select-lg w-48">
                                <option value="upcoming">Programări viitoare</option>
                                <option value="past">Programări trecute</option>
                            </select>
                        </div>

                        <div class="flex items-center gap-2.5">
                            <select name="status" id="statusSelect" class="select select-lg w-48">
                                <option value="all">Toate</option>
                                <option value="active">Confirmate</option>
                                <option value="inactive">Anulate</option>
                            </select>
                        </div>

                        <div class="flex items-center gap-2.5">
                            <select name="specialty" id="specialtySelect" class="select select-lg w-48">
                                <option value="">Toate Specialitățile</option>
                                {% for specialty in specialties %}
                                    <option value="{{ specialty.id }}">{{ specialty.name }}</option>
                                {% endfor %}
                            </select>
                        </div>

                        <div class="flex items-center gap-2.5">
                            <select name="service" id="serviceSelect" class="select select-lg w-48">
                                <option value="">Toate Serviciile</option>
                                {% for service in services %}
                                    <option value="{{ service.id }}">{{ service.name }}</option>
                                {% endfor %}
                            </select>
                        </div>

                        <div class="flex">
                            <label class="input input-md">
                                <i class="ki-filled ki-magnifier"></i>
                                <input name="search" id="searchInput" placeholder="Căutați după nume" type="text" value=""/>
                            </label>
                        </div>
                    </div>
                </div>

                <div id="network_cards">
                    {% include 'pages/appointments/components/_appointments_list.html.twig' with { appointments: appointments } %}
                </div>
            </div>
        </div>
    </main>

    <script>
      document.addEventListener('DOMContentLoaded', function() {
        const filterSelect   = document.getElementById('filterSelect');
        const statusSelect   = document.getElementById('statusSelect');
        const specialtySelect = document.getElementById('specialtySelect');
        const serviceSelect   = document.getElementById('serviceSelect');
        const searchInput    = document.getElementById('searchInput');
        const networkCardsContainer = document.getElementById('network_cards');

        let debounceTimeout;
        function debounce(func, delay) {
          clearTimeout(debounceTimeout);
          debounceTimeout = setTimeout(func, delay);
        }

        function fetchAppointments() {
          const filterType  = filterSelect.value;
          const status      = statusSelect.value;
          const specialty   = specialtySelect.value;
          const service     = serviceSelect.value;
          const query       = searchInput.value.trim();
          const responseType = 'twig';

          const url = new URL('{{ path("app_appointment_filter") }}', window.location.origin);
          url.searchParams.set('filterType', filterType);
          url.searchParams.set('status', status);
          url.searchParams.set('specialty', specialty);
          url.searchParams.set('service', service);
          url.searchParams.set('query', query);
          url.searchParams.set('responseType', responseType);

          fetch(url)
            .then(response => {
              if (!response.ok) {
                throw new Error('Network response was not ok');
              }
              return response.text();
            })
            .then(html => {
              networkCardsContainer.innerHTML = html;
            })
            .catch(error => console.error('Error fetching appointments:', error));
        }

        filterSelect.addEventListener('change', fetchAppointments);
        statusSelect.addEventListener('change', fetchAppointments);
        specialtySelect.addEventListener('change', fetchAppointments);
        serviceSelect.addEventListener('change', fetchAppointments);

        searchInput.addEventListener('input', function() {
          debounce(fetchAppointments, 300);
        });
      });
    </script>
{% endblock %}
