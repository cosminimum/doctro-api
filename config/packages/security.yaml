security:
    password_hashers:
        Symfony\Component\Security\Core\User\PasswordAuthenticatedUserInterface: 'auto'

    providers:
        app_user_provider:
            entity:
                class: App\Infrastructure\Entity\User
                property: email

    firewalls:
        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false
        register:
            pattern: ^/register
            security: false
        main:
            lazy: true
            provider: app_user_provider

            json_login:
                check_path: login

            logout:
                path: logout

            access_token:
                token_handler: App\Core\Security\AccessTokenHandler

    # Note: Only the *first* access control that matches will be used
    access_control:
        - { path: ^/login, roles: [ ] }
        - { path: ^/logout, roles: [ ] }
        - { path: ^/api/, roles: [ IS_AUTHENTICATED_FULLY ] }

when@test:
    security:
        password_hashers:
            # The following reduces the work factor to the lowest possible values. -- only for test env
            Symfony\Component\Security\Core\User\PasswordAuthenticatedUserInterface:
                algorithm: auto
                cost: 4 # Lowest possible value for bcrypt
                time_cost: 3 # Lowest possible value for argon
                memory_cost: 10 # Lowest possible value for argon
